@page "/blogdetailshow/{id:int}"

<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid Class="mt-10 mb-10">
        <MudItem xs="12" sm="9" md="9" id="主栏">
            <MudPaper Class="pa-4">
                @if (blog == null)
                {
                    <MudText Typo="Typo.h6" Color="Color.Secondary" Align="Align.Center">正在加载博客内容...</MudText>
                }
                else
                {
                    <MudText Typo="Typo.h2" Color="Color.Primary" GutterBottom="true" Align="Align.Center">
                        <b> @blog.Title </b>
                    </MudText>
                    <MudStack Row Spacing="2" Class="mb-2">
                        <MudSpacer/>
                        <MudText Typo="Typo.subtitle2" Color="Color.Default">
                            <MudIcon Icon="@Icons.Material.Filled.Update" /> @blog.PublishDate.ToString("yyyy-MM-dd")
                        </MudText>
                        @if (!string.IsNullOrEmpty(blog.Type))
                        {
                            <MudChip T="string" Color="Color.Default" Variant="Variant.Filled" Size="Size.Small">@blog.Type</MudChip>
                        }
                        <MudText Typo="Typo.caption" Color="Color.Default">
                            <MudIcon Icon="@Icons.Material.Filled.Visibility" /> @blog.ViewCount
                        </MudText>
                        <MudText Typo="Typo.caption" Color="Color.Default">
                            <MudIcon Icon="@Icons.Material.Filled.Comment" /> @blog.TalkCount
                        </MudText>
                    </MudStack>
                    <MudDivider Class="my-4" DividerType="DividerType.Middle" />
                    @if (!string.IsNullOrWhiteSpace(blog.HtmlContent))
                    {
                        <MudPaper>
                            <MudContainer class="@pageCssClass">
                                @((MarkupString)blog.HtmlContent)
                            </MudContainer>
                        </MudPaper>
                        @* <MudPaper>
                            @if (themePaletteService.IsDark)
                            {
                                <MudContainer class="blog-html-content-dark">
                                    @((MarkupString)blog.HtmlContent)
                                </MudContainer>
                            }
                            else
                            {
                                <MudContainer class="blog-html-content">
                                    @((MarkupString)blog.HtmlContent)
                                </MudContainer>
                            }
                        </MudPaper> *@
                    }
                }
            </MudPaper>

            <GanPersonWeb.Client.Component.BlogComment BlogId="id"/>
        </MudItem>
        <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
            <MudItem xs="12" sm="3" md="3" id="右侧边栏">
                <MudStack Spacing="5">
                    <MudPaper>
                        <MudContainer Class="mt-4 mb-4">
                            <MudText Typo="Typo.h6" Color="Color.Primary" Class="mb-2">描述</MudText>
                            <MudText Typo="Typo.body1" Color="Color.Default" Class="mb-2">@blog.Description</MudText>
                        </MudContainer>
                    </MudPaper>

                    <MudCard>
                        <MudCardContent>
                            <MudText>
                                <MudIcon Icon="@Icons.Material.Filled.Label" Color="Color.Primary" />
                            </MudText>

                            <MudDivider DividerType="DividerType.Middle" Class="mb-2"/>

                            @if (blog!=null && blog.Tags != null && blog.Tags.Count > 0)
                            {
                                @foreach (var tag in blog.Tags)
                                {
                                    <MudChip T="string" Color="Color.Default" Size="Size.Medium">@tag</MudChip>
                                }
                            }
                        </MudCardContent>
                    </MudCard>
                    <!-- 可在此处添加作者信息、推荐文章等内容 -->
                </MudStack>
            </MudItem>
        </MudHidden>
    </MudGrid>
</MudContainer>

@code {
    [Parameter]
    public int id { get; set; }

    [Inject]
    public ClientBlogService clientBlogService { get; set; } = default!;

    [Inject]
    public ThemePaletteService themePaletteService { get; set; } = default!;

    private string pageCssClass {
        get
        {
            string result = string.Empty;
            if (themePaletteService.IsDark)
            {
                result = "blog-html-content-dark";
            }
            else
            {
                result = "blog-html-content";
            }
            return result;
        }
    }

    private Blog blog = new Blog
    {
        Id = 0,
        Title = "博客标题",
        Description = "博客描述",
        HtmlContent = "<p>博客内容</p>",
        PublishDate = DateTime.Now,
        ViewCount = 0,
        TalkCount = 0,
        Tags = new List<string> { "标签1", "标签2" },
        Type = "类型",
        ImageUrl = "/images/maomao.png"
    };

    protected override async Task OnInitializedAsync()
    {
        blog = new Blog
        {
            Id = 0,
            Title = "博客标题",
            Description = "博客描述",
            HtmlContent = "<p>博客内容</p>",
            PublishDate = DateTime.Now,
            ViewCount = 0,
            TalkCount = 0,
            Tags = new List<string> { "标签1", "标签2" },
            Type = "类型",
            ImageUrl = "/images/maomao.png"
        };

        var blogTemp = await clientBlogService.GetBlogAsync(id);
        if (blogTemp != null)
        {
            blog = blogTemp;
        }

        themePaletteService.OnIsDarkChanged += OnThemeChanged;
    }

    private void Dispose()
    {
        themePaletteService.OnIsDarkChanged -= OnThemeChanged;
    }

    private void OnThemeChanged(bool isDark)
    {
        StateHasChanged();
    }
}
