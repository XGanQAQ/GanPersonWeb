@inherits LayoutComponentBase

<link href="css/BlogDetailShow.css" rel="stylesheet" />

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />

        <MudToggleIconButton @bind-Toggled="_isDarkMode"
        Icon="@Icons.Material.Filled.LightMode"
        Color="@Color.Error"
        ToggledIcon="@Icons.Material.Filled.ModeNight"
        ToggledColor="@Color.Inherit"
        title="@(_isDarkMode ? "On" : "Off")" />

        <MudMenu Dense
        Variant="Variant.Text"
        Size="Size.Medium"
        Color="Color.Inherit"
        Icon="@Icons.Material.TwoTone.MoreVert">
            <MudNavGroup Title="账户" Icon="@Icons.Material.Filled.ManageAccounts" IconColor="Color.Primary">
                <MudNavLink Href="/personCenter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person" IconColor="Color.Primary">个人中心</MudNavLink>
                <MudNavLink Href="/login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.TwoTone.Login" IconColor="Color.Primary">登入</MudNavLink>
                <MudNavLink OnClick="Logout" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.TwoTone.Logout" IconColor="Color.Primary">登出</MudNavLink>
            </MudNavGroup>

            <MudDivider />

            <MudNavGroup Title="主题" Icon="@Icons.Material.Filled.Palette" IconColor="Color.Primary">

            </MudNavGroup>

            <MudDivider />

            <MudNavLink Href="/Console/Dashboard" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Settings" IconColor="Color.Primary">设置</MudNavLink>

        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="2">
        <MudDrawerHeader>
            <MudButton Href="/">
                <MudText Typo="Typo.h5" Class="mt-1">GanX</MudText>
            </MudButton>
        </MudDrawerHeader>
        <MudNavMenu>
            @if (relativePath.StartsWith("Console"))
            {
                <MudNavLink Href="/Console/Dashboard" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Terminal">Dashboard</MudNavLink>
                <MudNavLink Href="/Console/PersonInfo" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">PersonInfo</MudNavLink>
                <MudNavLink Href="/Console/Blog" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.NoteAdd">Blog</MudNavLink>
                <MudNavLink Href="/Console/Project" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AddToQueue">Project</MudNavLink>
                <MudNavLink Href="/Console/Picture" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AddPhotoAlternate">Picture</MudNavLink>
            }
            else
            {
                <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
                <MudNavLink Href="/Blogs" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Book">Blogs</MudNavLink>
                <MudNavLink Href="/Portfolio" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Work">Portfolio</MudNavLink>
                <MudNavLink Href="/PictureBed" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Collections">Picture</MudNavLink>
                <MudNavLink Href="/GameDevLab" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.VideogameAsset">GameDevLab</MudNavLink>

                @* <MudNavLink Href="About" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.BackHand">About</MudNavLink> *@
                <MudNavLink Href="/Me" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.TagFaces">Me</MudNavLink>
            }
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {

    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;
    private MudTheme? _amber_light_theme = null;

    private string relativePath = string.Empty;// 相对路径


    [Inject]
    public ClientUserService clientUserService{ get; set; }
    [Inject]
    public NavigationManager navigation{ get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };

        _amber_light_theme = new()
        {
            PaletteLight = _amberlightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };

        navigation.LocationChanged += OnLocationChanged;
        UpdateRelativePath();
    }

    public void Dispose()
    {
        navigation.LocationChanged -= OnLocationChanged;
    }

    private void UpdateRelativePath()
    {
        relativePath = navigation.ToBaseRelativePath(navigation.Uri);
    }

    /// 处理导航事件，更新相对路径
    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        UpdateRelativePath();
        StateHasChanged();
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteLight _amberlightPalette = new()
    {
        Black = "#FFECB3",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };

    //点击登出按钮
    private async Task Logout()
    {
        await clientUserService.LogoutAsync();
        StateHasChanged();
    }

}


